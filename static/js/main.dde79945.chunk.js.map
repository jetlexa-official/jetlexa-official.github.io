{"version":3,"sources":["i18n.ts","config/enums/index.enums.ts","layouts/Default.tsx","utils/layout.ts","layouts/Vertical.tsx","layouts/Detached.tsx","layouts/Horizontal/index.tsx","layouts/TwoColumn/index.tsx","config/environments/development.ts","config/environments/staging.ts","config/environments/production.ts","config/index.ts","helpers/api/apiCore.ts","routes/PrivateRoute.tsx","routes/Root.tsx","routes/index.tsx","routes/Routes.tsx","helpers/fake-backend.ts","helpers/api/auth.ts","App.tsx","reportWebVitals.ts","redux/auth/reducers.ts","redux/layout/reducers.ts","redux/reducers.ts","redux/auth/saga.ts","redux/layout/saga.ts","redux/sagas.ts","redux/store.ts","index.tsx","constants/layout.ts","constants/enums/layout.enums.ts","redux/auth/actions.ts","redux/auth/interfaces/constants.interfaces.ts","redux/layout/actions.ts","utils/array.ts","redux/layout/interfaces/constants.interfaces.ts"],"names":["resources","es","translation","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","DEPLOYMENTS","DefaultLayout","props","useEffect","document","body","classList","add","remove","children","fallback","className","getLayoutConfigs","layoutWidth","config","leftSideBarType","SideBarTypes","LEFT_SIDEBAR_TYPE_DEFAULT","LayoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_TYPE_CONDENSED","changeBodyAttribute","attribute","value","setAttribute","Topbar","React","lazy","LeftSidebar","Footer","RightSidebar","loading","VerticalLayout","dispatch","useDispatch","useSelector","state","Layout","menuPosition","leftSideBarTheme","showSidebarUserInfo","showTwoToneIcons","topbarTheme","isOpenRightSideBar","useState","isMenuOpened","setIsMenuOpened","LayoutTypes","LAYOUT_VERTICAL","updateDimensions","useCallback","window","innerWidth","changeSidebarType","addEventListener","removeEventListener","isCondensed","id","openLeftMenuCallBack","prevState","hideLogo","Container","fluid","DetachedLayout","LAYOUT_DETACHED","toggleSidebarUserInfo","navCssClasses","topbarDark","Navbar","HorizontalLayout","LAYOUT_HORIZONTAL","SideBarTheme","LEFT_SIDEBAR_THEME_LIGHT","TwoColumnLayout","LAYOUT_TWO_COLUMN","changeTopbarTheme","TopbarTheme","TOPBAR_THEME_LIGHT","DEVELOPMENT","API_URL","INTEGRATIONS","TYPE","STAGING","PRODUCTION","env","process","CONFIGS","configureEnv","axios","defaults","headers","post","baseURL","interceptors","response","error","message","status","data","Promise","reject","location","href","AUTH_SESSION_KEY","setAuthorization","token","common","getUserFromCookie","user","sessionStorage","getItem","JSON","parse","APICore","get","url","params","queryString","Object","keys","map","key","join","getFile","responseType","getMultiple","urls","reqs","push","all","create","updatePatch","patch","update","put","delete","createWithFile","formData","FormData","k","append","updateWithFile","isUserAuthenticated","getLoggedInUser","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","setLoggedInUser","session","setItem","stringify","removeItem","setUserInSession","modifiedUser","userInfo","PrivateRoute","Component","component","roles","rest","api","render","to","pathname","from","loggedInUser","indexOf","role","Root","Login","Logout","Confirm","ForgetPassword","Register","LockScreen","Landing","EcommerceDashboard","AnalyticsDashboard","CalendarApp","Projects","ProjectDetail","ChatApp","Inbox","EmailDetail","EmailCompose","TaskList","Kanban","FileManager","Error404","Error500","Starter","Profile","Activity","Invoice","Maintenance","Pricing","UIElements","Widgets","Unicons","FeatherIcons","BootstrapIcon","BasicForms","FormAdvanced","FormValidation","FormWizard","FileUpload","Editors","Charts","BasicTables","AdvancedTables","GoogleMaps","VectorMaps","rootRoute","path","exact","route","Route","dashboardRoutes","name","icon","header","appRoutes","extrapagesRoutes","uiRoutes","authRoutes","otherPublicRoutes","flattenRoutes","routes","flatRoutes","forEach","item","authProtectedRoutes","publicRoutes","authProtectedFlattenRoutes","publicProtectedFlattenRoutes","Routes","layout","layoutCls","layoutType","getLayout","r","Default","index","mock","MockAdapter","login","logout","signup","forgotPassword","users","email","username","password","firstName","lastName","onPost","reply","resolve","setTimeout","filteredUsers","filter","length","fullname","split","newUser","configureFakeBackend","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INIT_STATE","Auth","action","type","AuthActionTypes","API_RESPONSE_SUCCESS","payload","actionType","LOGIN_USER","userLoggedIn","SIGNUP_USER","userSignUp","LOGOUT_USER","userLogout","FORGOT_PASSWORD","resetPasswordSuccess","passwordReset","API_RESPONSE_ERROR","registerError","RESET","passwordChange","MenuPositions","MENU_POSITION_FIXED","LayoutActionTypes","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","layoutConfig","CHANGE_MENU_POSITIONS","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_SIDEBAR_USER_INFO","CHANGE_TOPBAR_THEME","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","combineReducers","watchLoginUser","watchLogout","watchSignup","watchForgotPassword","authSaga","call","loginApi","authApiResponseSuccess","authApiResponseError","logoutApi","signupApi","forgotPasswordApi","takeEvery","fork","showRightSidebar","hideRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","manageBodyClass","cssClass","toggle","rootSaga","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","localstore","createStore","reducers","applyMiddleware","run","configureStore","getElementById","loginUser","logoutUser","signupUser","resetAuth","changeLayout","changeLayoutWidth","width","changeMenuPositions","position","changeSidebarTheme","sidebarTheme","sidebarType","groupByFields","array","f","groups","o","group","splitArray","chunkSize","Array","Math","ceil","fill","_","begin","slice"],"mappings":"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","file":"static/js/main.dde79945.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEs from './locales/es/translation.json';\n\n//translations\nconst resources = {\n    es: {\n        translation: translationEs,\n    },\n};\n\ni18n.use(detector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        fallbackLng: 'en', // use en if detected lng is not available\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n    });\n\nexport default i18n;\n","export enum DEPLOYMENTS {\n    DEVELOPMENT = \"DEVELOPMENT\",\n    STAGING = \"STAGING\",\n    PRODUCTION = \"PRODUCTION\"\n}\n\n","import React, { useEffect, Suspense } from 'react';\n\n//TYPES\nimport { DefaultLayoutProps } from '@layouts/interfaces/Default.interfaces';\n\n\nconst loading = () => <div className=\"\"></div>;\n\nconst DefaultLayout = (props: DefaultLayoutProps) => {\n    useEffect(() => {\n        if (document.body) document.body.classList.add('authentication-bg');\n\n        return () => {\n            if (document.body) document.body.classList.remove('authentication-bg');\n        };\n    }, []);\n\n    // get the child view which we would like to render\n    const children = props['children'] || null;\n\n    return (\n        <>\n            <Suspense fallback={loading()}>{children}</Suspense>\n        </>\n    );\n};\nexport default DefaultLayout;\n","// app constants\nimport { SideBarTypes, LayoutWidth } from '@constants/index';\n\nimport { ConfigTypes } from '@utils/interfaces/layout.interfaces';\n\nconst getLayoutConfigs = (layoutWidth: string | boolean | null) => {\n    // add property to change in particular layoutWidth\n    let config: ConfigTypes = {\n        leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n    };\n\n    switch (layoutWidth) {\n        case LayoutWidth.LAYOUT_WIDTH_FLUID:\n            config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT;\n            break;\n        case LayoutWidth.LAYOUT_WIDTH_BOXED:\n            config.leftSideBarType = SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n            break;\n        default:\n            return config;\n    }\n    return config;\n};\n\n/**\n * Changes the body attribute\n */\nconst changeBodyAttribute = (attribute: string, value: string): void => {\n    if (document.body) document.body.setAttribute(attribute, value);\n};\n\nexport { getLayoutConfigs, changeBodyAttribute };\n","import React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeSidebarType } from '../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../redux/store';\n\n// constants\nimport { LayoutTypes, SideBarTypes } from '../constants';\n\n// utils\nimport { changeBodyAttribute } from '../utils';\n\n//TYPES\nimport { VerticalLayoutProps } from \"@layouts/interfaces/Vertical.interfaces\";\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('@layouts/Topbar'));\nconst LeftSidebar = React.lazy(() => import('@layouts/LeftSidebar'));\nconst Footer = React.lazy(() => import('@layouts/Footer'));\nconst RightSidebar = React.lazy(() => import('@layouts/RightSidebar'));\n\nconst loading = () => <div className=\"\"></div>;\n\n\n\nconst VerticalLayout = ({ children }: VerticalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const {\n        layoutWidth,\n        menuPosition,\n        leftSideBarTheme,\n        leftSideBarType,\n        showSidebarUserInfo,\n        showTwoToneIcons,\n        topbarTheme,\n        isOpenRightSideBar,\n    } = useSelector((state: RootState) => ({\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        showTwoToneIcons: state.Layout.showTwoToneIcons,\n        topbarTheme: state.Layout.topbarTheme,\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    /*\n    layout defaults\n    */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_VERTICAL);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [dispatch, layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-menu-position', menuPosition);\n    }, [menuPosition]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-color', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-size', leftSideBarType);\n    }, [leftSideBarType]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-icon', showTwoToneIcons ? 'twotones' : '');\n    }, [showTwoToneIcons]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-showuser', showSidebarUserInfo);\n    }, [showSidebarUserInfo]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => !prevState);\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth > 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed: boolean = leftSideBarType === SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar openLeftMenuCallBack={openMenu} hideLogo={false} />\n                </Suspense>\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n            {isOpenRightSideBar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar />\n                </Suspense>\n            )}\n        </>\n    );\n};\nexport default VerticalLayout;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { toggleSidebarUserInfo } from '@redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '@redux/store';\n\n// constants\nimport { LayoutTypes, SideBarTypes } from '@constants/index';\n\n// utils\nimport { changeBodyAttribute } from '@utils/index';\n\n//TYPES \n\nimport { VerticalLayoutProps } from \"@layouts/interfaces/Detached.interfaces\";\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('@layouts/Topbar'));\nconst LeftSidebar = React.lazy(() => import('@layouts/LeftSidebar'));\nconst Footer = React.lazy(() => import('@layouts/Footer'));\nconst RightSidebar = React.lazy(() => import('@layouts/RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\n\n\nconst DetachedLayout = ({ children }: VerticalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    const {\n        layoutWidth,\n        menuPosition,\n        leftSideBarTheme,\n        leftSideBarType,\n        topbarTheme,\n        showSidebarUserInfo,\n        isOpenRightSideBar,\n    } = useSelector((state: RootState) => ({\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        topbarTheme: state.Layout.topbarTheme,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n    }));\n\n    /*\n    layout defaults\n    */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_DETACHED);\n        dispatch(toggleSidebarUserInfo(true));\n    }, [dispatch]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [dispatch, layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-menu-position', menuPosition);\n    }, [menuPosition]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-color', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-size', leftSideBarType);\n    }, [leftSideBarType]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-showuser', showSidebarUserInfo);\n    }, [showSidebarUserInfo]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => !prevState);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.add('sidebar-enable');\n            } else {\n                document.body.classList.remove('sidebar-enable');\n            }\n        }\n    };\n\n    const isCondensed = leftSideBarType === SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED;\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar\n                        openLeftMenuCallBack={openMenu}\n                        navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                        topbarDark={true}\n                    />\n                </Suspense>\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} />\n                </Suspense>\n\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n            {isOpenRightSideBar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar />\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default DetachedLayout;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// store\nimport { RootState, AppDispatch } from '@redux/store';\n\n// constants\nimport { LayoutTypes, SideBarTheme } from '@constants/layout';\n\n// utils\nimport { changeBodyAttribute } from '@utils/index';\n\n//TYPES\nimport { HorizontalLayoutProps } from \"@layouts/Horizontal/interfaces/index.interfaces\";\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('../Topbar'));\nconst Navbar = React.lazy(() => import('./Navbar'));\nconst Footer = React.lazy(() => import('../Footer'));\nconst RightSidebar = React.lazy(() => import('../RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\n\n\nconst HorizontalLayout = ({ children }: HorizontalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    const { layoutWidth, menuPosition, topbarTheme, isOpenRightSideBar } = useSelector((state: RootState) => ({\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        topbarTheme: state.Layout.topbarTheme,\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n    }));\n\n    /*\n    layout defaults\n    */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_HORIZONTAL);\n    }, [dispatch]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-menu-position', menuPosition);\n    }, [menuPosition]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-color', SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT);\n    }, []);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened(!isMenuOpened);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar openLeftMenuCallBack={openMenu} topbarDark={false} />\n                </Suspense>\n\n                <Suspense fallback={loading()}>\n                    <Navbar isMenuOpened={isMenuOpened} />\n                </Suspense>\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n\n                    {isOpenRightSideBar && (\n                        <Suspense fallback={loading()}>\n                            <RightSidebar />\n                        </Suspense>\n                    )}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HorizontalLayout;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeTopbarTheme } from '@redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '@redux/store';\n\n// utils\nimport { changeBodyAttribute } from '@utils/index';\n\n// constants\nimport { LayoutTypes, TopbarTheme } from '@constants/layout';\n\n//TYPES\nimport { VerticalLayoutProps } from '@layouts/TwoColumn/interfaces/index.interfaces';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('@layouts/Topbar'));\nconst LeftSidebar = React.lazy(() => import('@layouts/TwoColumn/LeftSidebar'));\nconst Footer = React.lazy(() => import('@layouts/Footer'));\nconst RightSidebar = React.lazy(() => import('@layouts/RightSidebar'));\n\nconst loading = () => <div className=\"text-center\"></div>;\n\n\nconst TwoColumnLayout = ({ children }: VerticalLayoutProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n\n    const { layoutWidth, leftSideBarTheme, isOpenRightSideBar, topbarTheme, leftSideBarType } = useSelector(\n        (state: RootState) => ({\n            layoutWidth: state.Layout.layoutWidth,\n            menuPosition: state.Layout.menuPosition,\n            leftSideBarTheme: state.Layout.leftSideBarTheme,\n            leftSideBarType: state.Layout.leftSideBarType,\n            topbarTheme: state.Layout.topbarTheme,\n            isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n        })\n    );\n\n    const [isMenuOpened, setIsMenuOpened] = useState<boolean>(false);\n\n    /*\n     * layout defaults\n     */\n    useEffect(() => {\n        changeBodyAttribute('data-layout-mode', LayoutTypes.LAYOUT_TWO_COLUMN);\n        dispatch(changeTopbarTheme(TopbarTheme.TOPBAR_THEME_LIGHT));\n    }, [dispatch]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-layout-width', layoutWidth);\n    }, [dispatch, layoutWidth]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-color', leftSideBarTheme);\n    }, [leftSideBarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-topbar-color', topbarTheme);\n    }, [topbarTheme]);\n\n    useEffect(() => {\n        changeBodyAttribute('data-sidebar-size', leftSideBarType);\n    }, [leftSideBarType]);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => !prevState);\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.add('sidebar-enable');\n            } else {\n                document.body.classList.remove('sidebar-enable');\n            }\n        }\n    };\n\n    return (\n        <>\n            <div id=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <Topbar openLeftMenuCallBack={openMenu} topbarDark={true} />\n                </Suspense>\n                <Suspense fallback={loading()}>\n                    <LeftSidebar />\n                </Suspense>\n\n                <div className=\"content-page\">\n                    <div className=\"content\">\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n            {isOpenRightSideBar && (\n                <Suspense fallback={loading()}>\n                    <RightSidebar />\n                </Suspense>\n            )}\n        </>\n    );\n};\n\nexport default TwoColumnLayout;\n","import { DEPLOYMENTS } from \"@config/enums/index.enums\";\nimport { CONFIG_TYPE } from \"@config/interfaces/index.interfaces\";\n\nexport const DEVELOPMENT: CONFIG_TYPE = {\n    API_URL: 'http://localhost:3000/api',\n    INTEGRATIONS: {\n\n    },\n    TYPE: DEPLOYMENTS?.DEVELOPMENT\n}\n\n","import { DEPLOYMENTS } from \"@config/enums/index.enums\";\nimport { CONFIG_TYPE } from \"@config/interfaces/index.interfaces\";\n\nexport const STAGING: CONFIG_TYPE = {\n    API_URL: 'https://api-test.jetlexa.com/api',\n    INTEGRATIONS: {\n\n    },\n    TYPE: DEPLOYMENTS?.STAGING\n}\n\n","import { DEPLOYMENTS } from \"@config/enums/index.enums\";\nimport { CONFIG_TYPE } from \"@config/interfaces/index.interfaces\";\n\nexport const PRODUCTION: CONFIG_TYPE = {\n    API_URL: 'https://api.jetlexa.com/api',\n    INTEGRATIONS: {\n\n    },\n    TYPE: DEPLOYMENTS?.PRODUCTION\n}\n","import { DEPLOYMENTS } from '@config/enums/index.enums';\nimport * as CONFIGS from '@config/environments';\nimport { CONFIG_TYPE } from '@config/interfaces/index.interfaces';\n\n\nconst configureEnv = (env: string = process.env.NODE_ENV) => {\n    switch (env) {\n        case \"development\":\n            return CONFIGS[DEPLOYMENTS?.DEVELOPMENT];\n        case \"staging\":\n            return CONFIGS[DEPLOYMENTS?.STAGING]\n        case \"production\":\n            return CONFIGS[DEPLOYMENTS?.PRODUCTION]\n        default:\n            return CONFIGS[DEPLOYMENTS?.PRODUCTION]\n    }\n}\n\n\nconst config: CONFIG_TYPE = configureEnv();\n\n\nexport default config;\n","import jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n\nimport config from '@config/index';\n\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            // window.location.href = '/not-found';\n        } else if (error && error.response && error.response.status === 403) {\n            window.location.href = '/access-denied';\n        } else {\n            switch (error.response.status) {\n                case 401:\n                    message = 'Invalid credentials';\n                    break;\n                case 403:\n                    message = 'Access Forbidden';\n                    break;\n                case 404:\n                    message = 'Sorry! the data you are looking for could not be found';\n                    break;\n                default: {\n                    message =\n                        error.response && error.response.data ? error.response.data['message'] : error.message || error;\n                }\n            }\n            return Promise.reject(message);\n        }\n    }\n);\n\nconst AUTH_SESSION_KEY = 'shreyu_user';\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token: string | null) => {\n    if (token) axios.defaults.headers.common['Authorization'] = 'JWT ' + token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromCookie = () => {\n    const user = sessionStorage.getItem(AUTH_SESSION_KEY);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url: string, params: any) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, params);\n        } else {\n            response = axios.get(`${url}`, params);\n        }\n        return response;\n    };\n\n    getFile = (url: string, params: any) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n            response = axios.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls: string, params: any) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                    .map((key) => key + '=' + params[key])\n                    .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axios.get(`${url}?${queryString}`));\n        }\n        return axios.all(reqs);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url: string, data: any) => {\n        return axios.post(url, data);\n    };\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url: string, data: any) => {\n        return axios.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url: string, data: any) => {\n        return axios.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url: string) => {\n        return axios.delete(url);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url: string, data: any) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url: string, data: any) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const user = this.getLoggedInUser();\n\n        if (!user) {\n            return false;\n        }\n        const decoded: any = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    setLoggedInUser = (session: any) => {\n        if (session) sessionStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));\n        else {\n            sessionStorage.removeItem(AUTH_SESSION_KEY);\n        }\n    };\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromCookie();\n    };\n\n    setUserInSession = (modifiedUser: any) => {\n        let userInfo = sessionStorage.getItem(AUTH_SESSION_KEY);\n        if (userInfo) {\n            const { token, user } = JSON.parse(userInfo);\n            this.setLoggedInUser({ token, ...user, ...modifiedUser });\n        }\n    };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromCookie();\nif (user) {\n    const { token } = user;\n    if (token) {\n        setAuthorization(token);\n    }\n}\n\nexport { APICore, setAuthorization };\n","import { Route, Redirect, RouteComponentProps } from 'react-router-dom';\n\nimport { APICore } from '@helpers/api/apiCore';\n\n//TYPES\nimport { PrivateRouteProps } from '@routes/interfaces/PrivateRoute.interfaces';\n\n\n/**\n * Private Route forces the authorization before the route can be accessed\n * @param {*} param0\n * @returns\n */\nconst PrivateRoute = ({ component: Component, roles, ...rest }: PrivateRouteProps) => {\n    const api = new APICore();\n\n    return (\n        <Route\n            {...rest}\n            render={(props: RouteComponentProps) => {\n                if (api.isUserAuthenticated() === false) {\n                    // not logged in so redirect to login page with the return url\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: '/auth/login',\n                                state: { from: props['location'] },\n                            }}\n                        />\n                    );\n                }\n\n                const loggedInUser = api.getLoggedInUser();\n\n                // check if route is restricted by role\n                if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                    // role not authorised so redirect to home page\n                    return <Redirect to={{ pathname: '/' }} />;\n                }\n                // authorised so return component\n                return <Component {...props} />;\n            }}\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { APICore } from '@helpers/api/apiCore';\n\nconst Root = () => {\n    const api = new APICore();\n\n    const getRootUrl = () => {\n        let url: string = 'landing';\n\n        // check if user logged in or not and return url accordingly\n        if (api.isUserAuthenticated() === false) {\n            url = 'landing';\n        } else {\n            url = 'dashboard/ecommerce';\n        }\n        return url;\n    };\n\n    const url = getRootUrl();\n\n    return <Redirect to={`/${url}`} />;\n};\n\nexport default Root;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\n//TYPES\nimport { RoutesProps } from '@routes/interfaces/index.interfaces';\n\n// components\nimport PrivateRoute from './PrivateRoute';\nimport Root from '@routes/Root';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('@pages/auth/Login'));\nconst Logout = React.lazy(() => import('@pages/auth/Logout'));\nconst Confirm = React.lazy(() => import('@pages/auth/Confirm'));\nconst ForgetPassword = React.lazy(() => import('@pages/auth/ForgetPassword'));\nconst Register = React.lazy(() => import('@pages/auth/Register'));\nconst LockScreen = React.lazy(() => import('@pages/auth/LockScreen'));\n\n// landing\nconst Landing = React.lazy(() => import('@pages/landing/'));\n\n// dashboard\nconst EcommerceDashboard = React.lazy(() => import('@pages/dashboard/Ecommerce/'));\nconst AnalyticsDashboard = React.lazy(() => import('@pages/dashboard/Analytics/'));\n\n// apps\nconst CalendarApp = React.lazy(() => import('@pages/apps/Calendar/'));\nconst Projects = React.lazy(() => import('@pages/apps/Projects/'));\nconst ProjectDetail = React.lazy(() => import('@pages/apps/Projects/Detail/'));\n// - chat\nconst ChatApp = React.lazy(() => import('@pages/apps/Chat/'));\n// - email\nconst Inbox = React.lazy(() => import('@pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('@pages/apps/Email/Detail'));\nconst EmailCompose = React.lazy(() => import('@pages/apps/Email/Compose'));\n// - tasks\nconst TaskList = React.lazy(() => import('@pages/apps/Tasks/List/'));\nconst Kanban = React.lazy(() => import('@pages/apps/Tasks/Board/'));\n// - file\nconst FileManager = React.lazy(() => import('@pages/apps/FileManager'));\n\n// extra pages\nconst Error404 = React.lazy(() => import('@pages/error/Error404'));\nconst Error500 = React.lazy(() => import('@pages/error/Error500'));\n// -other\nconst Starter = React.lazy(() => import('@pages/other/Starter'));\nconst Profile = React.lazy(() => import('@pages/other/Profile'));\nconst Activity = React.lazy(() => import('@pages/other/Activity'));\nconst Invoice = React.lazy(() => import('@pages/other/Invoice'));\nconst Maintenance = React.lazy(() => import('@pages/other/Maintenance'));\nconst Pricing = React.lazy(() => import('@pages/other/Pricing'));\n\n// uikit\nconst UIElements = React.lazy(() => import('@pages/uikit'));\n\n// widgets\nconst Widgets = React.lazy(() => import('@pages/widgets/'));\n\n// icons\nconst Unicons = React.lazy(() => import('@pages/icons/Unicons'));\nconst FeatherIcons = React.lazy(() => import('@pages/icons/Feather/'));\nconst BootstrapIcon = React.lazy(() => import('@pages/icons/Bootstrap/'));\n\n// forms\nconst BasicForms = React.lazy(() => import('@pages/forms/Basic'));\nconst FormAdvanced = React.lazy(() => import('@pages/forms/Advanced'));\nconst FormValidation = React.lazy(() => import('@pages/forms/Validation'));\nconst FormWizard = React.lazy(() => import('@pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('@pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('@pages/forms/Editors'));\n\n// charts\nconst Charts = React.lazy(() => import('@pages/charts/'));\n\n// tables\nconst BasicTables = React.lazy(() => import('@pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('@pages/tables/Advanced'));\n\n// maps\nconst GoogleMaps = React.lazy(() => import('@pages/maps/GoogleMaps'));\nconst VectorMaps = React.lazy(() => import('@pages/maps/VectorMaps'));\n\n\n\n// root routes\nconst rootRoute: RoutesProps = {\n    path: '/',\n    exact: true,\n    component: () => <Root />,\n    route: Route,\n};\n\n// dashboards\nconst dashboardRoutes: RoutesProps = {\n    path: '/dashboard',\n    name: 'Dashboards',\n    icon: 'airplay',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/dashboard/ecommerce',\n            name: 'Ecommerce',\n            component: EcommerceDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/dashboard/analytics',\n            name: 'Analytics',\n            component: AnalyticsDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n\nconst calendarAppRoutes: RoutesProps = {\n    path: '/apps/calendar',\n    name: 'Calendar',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'calendar',\n    component: CalendarApp,\n    header: 'Apps',\n};\n\nconst chatAppRoutes: RoutesProps = {\n    path: '/apps/chat',\n    name: 'Chat',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'message-square',\n    component: ChatApp,\n};\n\nconst emailAppRoutes: RoutesProps = {\n    path: '/apps/email',\n    name: 'Email',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'mail',\n    children: [\n        {\n            path: '/apps/email/inbox',\n            name: 'Inbox',\n            component: Inbox,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/email/details',\n            name: 'Email Details',\n            component: EmailDetail,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/email/compose',\n            name: 'Compose Email',\n            component: EmailCompose,\n            route: PrivateRoute,\n        },\n    ],\n};\n\nconst projectAppRoutes: RoutesProps = {\n    path: '/apps/projects',\n    name: 'Projects',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-briefcase',\n\n    children: [\n        {\n            path: '/apps/projects/list',\n            name: 'List',\n            component: Projects,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/projects/details',\n            name: 'Detail',\n            component: ProjectDetail,\n            route: PrivateRoute,\n        },\n    ],\n};\n\nconst taskAppRoutes: RoutesProps = {\n    path: '/apps/tasks',\n    name: 'Tasks',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'clipboard',\n    children: [\n        {\n            path: '/apps/tasks/list',\n            name: 'Task List',\n            component: TaskList,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/tasks/kanban',\n            name: 'Kanban',\n            component: Kanban,\n            route: PrivateRoute,\n        },\n    ],\n};\n\nconst fileAppRoutes: RoutesProps = {\n    path: '/apps/file-manager',\n    name: 'File Manager',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'folder-plus',\n    component: FileManager,\n};\n\nconst appRoutes = [calendarAppRoutes, chatAppRoutes, emailAppRoutes, projectAppRoutes, taskAppRoutes, fileAppRoutes];\n\n// pages\nconst extrapagesRoutes: RoutesProps = {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'package',\n    header: 'Custom',\n    children: [\n        {\n            path: '/pages/starter',\n            name: 'Starter',\n            component: Starter,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/profile',\n            name: 'Profile',\n            component: Profile,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/activity',\n            name: 'Activity',\n            component: Activity,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/pricing',\n            name: 'Pricing',\n            component: Pricing,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes: RoutesProps = {\n    path: '/components',\n    name: 'Components',\n    icon: 'package',\n    header: 'UI Elements',\n    children: [\n        {\n            path: '/components/ui-elements',\n            name: 'UIElements',\n            component: UIElements,\n            route: PrivateRoute,\n        },\n        {\n            path: '/components/widgets',\n            name: 'Widgets',\n            component: Widgets,\n            route: PrivateRoute,\n        },\n        {\n            path: '/icons',\n            name: 'Icons',\n            children: [\n                {\n                    path: '/icons/unicons',\n                    name: 'Unicons',\n                    component: Unicons,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/icons/feather',\n                    name: 'Feather',\n                    component: FeatherIcons,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/icons/bootstrap',\n                    name: 'Bootstrap Icon',\n                    component: BootstrapIcon,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/forms',\n            name: 'Forms',\n            children: [\n                {\n                    path: '/forms/basic',\n                    name: 'Basic Elements',\n                    component: BasicForms,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/forms/advanced',\n                    name: 'Form Advanced',\n                    component: FormAdvanced,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/forms/validation',\n                    name: 'Form Validation',\n                    component: FormValidation,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/forms/wizard',\n                    name: 'Form Wizard',\n                    component: FormWizard,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/forms/upload',\n                    name: 'File Upload',\n                    component: FileUpload,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/forms/editors',\n                    name: 'Editors',\n                    component: Editors,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/components/charts',\n            name: 'Charts',\n            component: Charts,\n            route: PrivateRoute,\n        },\n        {\n            path: '/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/maps',\n            name: 'Maps',\n            children: [\n                {\n                    path: '/maps/googlemaps',\n                    name: 'Google Maps',\n                    component: GoogleMaps,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/maps/vectorMaps',\n                    name: 'Google Maps',\n                    component: VectorMaps,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n    ],\n};\n\n// auth\nconst authRoutes: RoutesProps[] = [\n    {\n        path: '/auth/login',\n        name: 'Login',\n        component: Login,\n        route: Route,\n    },\n    {\n        path: '/auth/register',\n        name: 'Register',\n        component: Register,\n        route: Route,\n    },\n    {\n        path: '/auth/confirm',\n        name: 'Confirm',\n        component: Confirm,\n        route: Route,\n    },\n    {\n        path: '/auth/forget-password',\n        name: 'Forget Password',\n        component: ForgetPassword,\n        route: Route,\n    },\n    {\n        path: '/auth/lock-screen',\n        name: 'Lock Screen',\n        component: LockScreen,\n        route: Route,\n    },\n    {\n        path: '/auth/logout',\n        name: 'Logout',\n        component: Logout,\n        route: Route,\n    },\n];\n\n// public routes\nconst otherPublicRoutes: RoutesProps[] = [\n    {\n        path: '/landing',\n        name: 'landing',\n        component: Landing,\n        route: Route,\n    },\n    {\n        path: '/maintenance',\n        name: 'Maintenance',\n        component: Maintenance,\n        route: Route,\n    },\n    {\n        path: '/error-404',\n        name: 'Error - 404',\n        component: Error404,\n        route: Route,\n    },\n    {\n        path: '/error-500',\n        name: 'Error - 500',\n        component: Error500,\n        route: Route,\n    },\n];\n\n// flatten the list of all nested routes\nconst flattenRoutes = (routes: RoutesProps[]) => {\n    let flatRoutes: RoutesProps[] = [];\n\n    routes = routes || [];\n    routes.forEach((item: RoutesProps) => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst authProtectedRoutes = [rootRoute, dashboardRoutes, ...appRoutes, extrapagesRoutes, uiRoutes];\nconst publicRoutes = [...authRoutes, ...otherPublicRoutes];\n\nconst authProtectedFlattenRoutes = flattenRoutes([...authProtectedRoutes]);\nconst publicProtectedFlattenRoutes = flattenRoutes([...publicRoutes]);\nexport { publicRoutes, authProtectedRoutes, authProtectedFlattenRoutes, publicProtectedFlattenRoutes };\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// layout constants\nimport { LayoutTypes } from '@constants/layout';\n\n// strore\nimport { RootState } from '@redux/store';\n\n// All layouts containers\nimport DefaultLayout from '@layouts/Default';\nimport VerticalLayout from '@layouts/Vertical';\nimport DetachedLayout from '@layouts/Detached';\nimport HorizontalLayout from '@layouts/Horizontal';\nimport TwoColumnLayout from '@layouts/TwoColumn';\n\nimport { authProtectedFlattenRoutes, publicProtectedFlattenRoutes } from '@routes/index';\n\nimport { RoutesProps } from '@routes/interfaces/Routes.interfaces';\n\nconst Routes = (props: RoutesProps) => {\n    const { layout } = useSelector((state: RootState) => ({\n        layout: state.Layout,\n    }));\n\n    const getLayout = () => {\n        let layoutCls = TwoColumnLayout;\n\n        switch (layout.layoutType) {\n            case LayoutTypes.LAYOUT_HORIZONTAL:\n                layoutCls = HorizontalLayout;\n                break;\n            case LayoutTypes.LAYOUT_DETACHED:\n                layoutCls = DetachedLayout;\n                break;\n            case LayoutTypes.LAYOUT_VERTICAL:\n                layoutCls = VerticalLayout;\n                break;\n            default:\n                layoutCls = TwoColumnLayout;\n                break;\n        }\n        return layoutCls;\n    };\n\n    let Layout = getLayout();\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path={publicProtectedFlattenRoutes.map((r: any) => r['path'])}>\n                    <DefaultLayout {...props} layout={layout}>\n                        <Switch>\n                            {publicProtectedFlattenRoutes.map((route: any, index: number) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </DefaultLayout>\n                </Route>\n\n                <Route path={authProtectedFlattenRoutes.map((r: any) => r['path'])}>\n                    <Layout {...props}>\n                        <Switch>\n                            {authProtectedFlattenRoutes.map((route: any, index: number) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </Layout>\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","import axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\n\ninterface UserData {\n    id: number;\n    email?: string;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    role: string;\n    token: string;\n}\n\nvar mock = new MockAdapter(axios);\n\nexport function configureFakeBackend() {\n    let users: UserData[] = [\n        {\n            id: 1,\n            email: 'shreyu@coderthemes.com',\n            username: 'test',\n            password: 'test',\n            firstName: 'Test',\n            lastName: 'User',\n            role: 'Admin',\n            token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI',\n        },\n    ];\n\n    mock.onPost('/login/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // find if any user matches login credentials\n                let filteredUsers = users.filter((user) => {\n                    return user.email === params.email && user.password === params.password;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return user details and fake jwt token\n                    let user = filteredUsers[0];\n                    resolve([200, user]);\n                } else {\n                    // else return error\n                    resolve([401, { message: 'Username or password is incorrect' }]);\n                }\n            }, 1000);\n        });\n    });\n\n    mock.onPost('/register/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // add new users\n                let [firstName, lastName] = params.fullname.split(' ');\n                let newUser: UserData = {\n                    id: users.length + 1,\n                    username: firstName,\n                    password: params.password,\n                    firstName: firstName,\n                    lastName: lastName,\n                    role: 'Admin',\n                    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJIeXBlciJ9.P27f7JNBF-vOaJFpkn-upfEh3zSprYfyhTOYhijykdI',\n                };\n                users.push(newUser);\n\n                resolve([200, newUser]);\n            }, 1000);\n        });\n    });\n\n    mock.onPost('/forget-password/').reply(function (config) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(function () {\n                // get parameters from post request\n                let params = JSON.parse(config.data);\n\n                // find if any user matches login credentials\n                let filteredUsers = users.filter((user) => {\n                    return user.email === params.email;\n                });\n\n                if (filteredUsers.length) {\n                    // if login details are valid return user details and fake jwt token\n                    let responseJson = {\n                        message: \"We've sent you a link to reset password to your registered email.\",\n                    };\n                    resolve([200, responseJson]);\n                } else {\n                    // else return error\n                    resolve([\n                        401,\n                        {\n                            message: 'Sorry, we could not find any registered user with entered username',\n                        },\n                    ]);\n                }\n            }, 1000);\n        });\n    });\n}\n","import { APICore } from '@helpers/api/apiCore';\n\nconst api = new APICore();\n\n// account\nfunction login(params: { email: string; password: string }) {\n    const baseUrl = '/login/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction logout() {\n    const baseUrl = '/logout/';\n    return api.create(`${baseUrl}`, {});\n}\n\nfunction signup(params: { fullname: string; email: string; password: string }) {\n    const baseUrl = '/register/';\n    return api.create(`${baseUrl}`, params);\n}\n\nfunction forgotPassword(params: { email: string }) {\n    const baseUrl = '/forget-password/';\n    return api.create(`${baseUrl}`, params);\n}\n\nexport { login, logout, signup, forgotPassword };\n","import Routes from '@routes/Routes';\n\nimport { configureFakeBackend } from '@helpers/index';\n\n// Themes\n// For Default import Theme.scss\nimport '@assets/scss/Theme.scss';\n\n// For Dark import Theme-Dark.scss\n// import '@assets/scss/Theme-Dark.scss';\n\n// configure fake backend\nconfigureFakeBackend();\n\nconst App = () => {\n    return (\n        <>\n            <Routes></Routes>\n        </>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","// apicore\nimport { APICore } from '@helpers/api/apiCore';\n\n// constants\nimport { AuthActionTypes } from '@redux/auth/constants';\n\n//TYPES\nimport { UserData, AuthActionType, State } from '@redux/auth/interfaces/reducers.interfaces';\n\nconst api = new APICore();\n\nconst INIT_STATE = {\n    user: api.getLoggedInUser(),\n    loading: false,\n};\n\n\nconst Auth = (state: State = INIT_STATE, action: AuthActionType): any => {\n    switch (action.type) {\n        case AuthActionTypes.API_RESPONSE_SUCCESS:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        user: action.payload.data,\n                        userLoggedIn: true,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        loading: false,\n                        userSignUp: true,\n                    };\n                }\n                case AuthActionTypes.LOGOUT_USER: {\n                    return {\n                        ...state,\n                        user: null,\n                        loading: false,\n                        userLogout: true,\n                        userLoggedIn: false,\n\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        resetPasswordSuccess: action.payload.data,\n                        loading: false,\n                        passwordReset: true,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.API_RESPONSE_ERROR:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        userLoggedIn: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        registerError: action.payload.error,\n                        userSignUp: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordReset: false,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.LOGIN_USER:\n            return { ...state, loading: true, userLoggedIn: false };\n        case AuthActionTypes.LOGOUT_USER:\n            return { ...state, loading: true, userLogout: false };\n        case AuthActionTypes.RESET:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                userSignUp: false,\n                userLoggedIn: false,\n                passwordReset: false,\n                passwordChange: false,\n                resetPasswordSuccess: null,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// action constants\nimport { LayoutActionTypes, LayoutStateTypes } from '@redux/layout/interfaces/constants.interfaces';\n\n// app constants\nimport {\n    LayoutTypes,\n    LayoutWidth,\n    MenuPositions,\n    SideBarTheme,\n    SideBarTypes,\n    TopbarTheme,\n} from '@constants/layout';\n\n// actions\nimport { LayoutActionType } from '@redux/layout/interfaces/actions.interfaces';\n\n// utils\nimport { getLayoutConfigs } from '@utils/index';\n\nconst INIT_STATE = {\n    layoutType: LayoutTypes.LAYOUT_VERTICAL,\n    layoutWidth: LayoutWidth.LAYOUT_WIDTH_FLUID,\n    menuPosition: MenuPositions.MENU_POSITION_FIXED,\n    leftSideBarTheme: SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT,\n    leftSideBarType: SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT,\n    showSidebarUserInfo: false,\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT,\n    isOpenRightSideBar: false,\n};\n\nconst Layout = (state: LayoutStateTypes = INIT_STATE, action: LayoutActionType<string | boolean | null>) => {\n    switch (action.type) {\n        case LayoutActionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            const layoutConfig = getLayoutConfigs(action.payload! && action.payload);\n            return {\n                ...state,\n                layoutWidth: action.payload,\n                ...layoutConfig,\n            };\n        case LayoutActionTypes.CHANGE_MENU_POSITIONS:\n            return {\n                ...state,\n                menuPosition: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO:\n            return {\n                ...state,\n                showSidebarUserInfo: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_TOPBAR_THEME:\n            return {\n                ...state,\n                topbarTheme: action.payload,\n            };\n        case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                isOpenRightSideBar: true,\n            };\n        case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                isOpenRightSideBar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","import { combineReducers } from 'redux';\n\nimport Auth from '@redux/auth/reducers';\nimport Layout from '@redux/layout/reducers';\n\nexport default combineReducers({\n    Auth,\n    Layout,\n});\n","import { all, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport { SagaIterator } from '@redux-saga/core';\n\n// apicore\nimport { APICore, setAuthorization } from '@helpers/api/apiCore';\n\n// helpers\nimport {\n    login as loginApi,\n    logout as logoutApi,\n    signup as signupApi,\n    forgotPassword as forgotPasswordApi,\n} from '@helpers/index';\n\n// actions\nimport { authApiResponseSuccess, authApiResponseError } from '@redux/auth/actions';\n\n// constants\nimport { AuthActionTypes } from '@redux/auth/constants';\n\nimport { UserData } from '@redux/auth/interfaces/saga.interfaces';\n\nconst api = new APICore();\n\n/**\n * Login the user\n * @param {*} payload - username and password\n */\nfunction* login({ payload: { email, password }, type }: UserData): SagaIterator {\n    try {\n        const response = yield call(loginApi, { email, password });\n        const user = response.data;\n        // NOTE - You can change this according to response format from your api\n        api.setLoggedInUser(user);\n        setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, user));\n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n/**\n * Logout the user\n */\nfunction* logout(): SagaIterator {\n    try {\n        yield call(logoutApi);\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n    }\n}\n\nfunction* signup({ payload: { fullname, email, password } }: UserData): SagaIterator {\n    try {\n        const response = yield call(signupApi, { fullname, email, password });\n        const user = response.data;\n        // api.setLoggedInUser(user);\n        // setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.SIGNUP_USER, user));\n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.SIGNUP_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\nfunction* forgotPassword({ payload: { email } }: UserData): SagaIterator {\n    try {\n        const response = yield call(forgotPasswordApi, { email });\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD, response.data));\n    } catch (error: any) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD, error));\n    }\n}\nexport function* watchLoginUser() {\n    yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\n\nexport function* watchLogout() {\n    yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\n\nexport function* watchSignup(): any {\n    yield takeEvery(AuthActionTypes.SIGNUP_USER, signup);\n}\n\nexport function* watchForgotPassword(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD, forgotPassword);\n}\n\nfunction* authSaga() {\n    yield all([fork(watchLoginUser), fork(watchLogout), fork(watchSignup), fork(watchForgotPassword)]);\n}\n\nexport default authSaga;\n","import { all, call, fork, takeEvery } from 'redux-saga/effects';\n\n// constants\nimport { LayoutActionTypes } from '@redux/layout/interfaces/constants.interfaces';\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass: string, action = 'toggle') {\n    switch (action) {\n        case 'add':\n            if (document.body) document.body.classList.add(cssClass);\n            break;\n        case 'remove':\n            if (document.body) document.body.classList.remove(cssClass);\n            break;\n        default:\n            if (document.body) document.body.classList.toggle(cssClass);\n            break;\n    }\n\n    return true;\n}\n\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\n    } catch (error) { }\n}\n\n/**\n * Hides the rightsidebar\n */\nfunction* hideRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\n    } catch (error) { }\n}\n\nexport function* watchShowRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\n\nexport function* watchHideRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga(): any {\n    yield all([fork(watchShowRightSidebar), fork(watchHideRightSidebar)]);\n}\n\nexport default LayoutSaga;\n","import { all } from 'redux-saga/effects';\n\nimport authSaga from '@redux/auth/saga';\nimport layoutSaga from '@redux/layout/saga';\n\nexport default function* rootSaga() {\n    yield all([authSaga(), layoutSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from '@redux/reducers';\nimport rootSaga from '@redux/sagas';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nlet store: any;\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const localstore = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(rootSaga);\n    store = localstore;\n    return localstore;\n}\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './i18n';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore({})}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* Layout types and other constants */\n\nexport enum LayoutTypes {\n    LAYOUT_VERTICAL = 'vertical',\n    LAYOUT_HORIZONTAL = 'horizontal',\n    LAYOUT_DETACHED = 'detached',\n    LAYOUT_TWO_COLUMN = 'two-column',\n}\n\nexport enum LayoutWidth {\n    LAYOUT_WIDTH_FLUID = 'fluid',\n    LAYOUT_WIDTH_BOXED = 'boxed',\n}\n\nexport enum MenuPositions {\n    MENU_POSITION_FIXED = 'fixed',\n    MENU_POSITION_SCROLLABLE = 'scrollable',\n}\n\nexport enum SideBarTheme {\n    LEFT_SIDEBAR_THEME_LIGHT = 'light',\n    LEFT_SIDEBAR_THEME_DARK = 'dark',\n}\n\nexport enum SideBarTypes {\n    LEFT_SIDEBAR_TYPE_DEFAULT = 'default',\n    LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed',\n    LEFT_SIDEBAR_TYPE_COMPACT = 'compact',\n}\n\nexport enum TopbarTheme {\n    TOPBAR_THEME_LIGHT = 'light',\n    TOPBAR_THEME_DARK = 'dark',\n}\n","/* Layout types and other constants */\n\nexport enum LayoutTypes {\n    LAYOUT_VERTICAL = 'vertical',\n    LAYOUT_HORIZONTAL = 'horizontal',\n    LAYOUT_DETACHED = 'detached',\n    LAYOUT_TWO_COLUMN = 'two-column',\n}\n\nexport enum LayoutWidth {\n    LAYOUT_WIDTH_FLUID = 'fluid',\n    LAYOUT_WIDTH_BOXED = 'boxed',\n}\n\nexport enum MenuPositions {\n    MENU_POSITION_FIXED = 'fixed',\n    MENU_POSITION_SCROLLABLE = 'scrollable',\n}\n\nexport enum SideBarTheme {\n    LEFT_SIDEBAR_THEME_LIGHT = 'light',\n    LEFT_SIDEBAR_THEME_DARK = 'dark',\n}\n\nexport enum SideBarTypes {\n    LEFT_SIDEBAR_TYPE_DEFAULT = 'default',\n    LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed',\n    LEFT_SIDEBAR_TYPE_COMPACT = 'compact',\n}\n\nexport enum TopbarTheme {\n    TOPBAR_THEME_LIGHT = 'light',\n    TOPBAR_THEME_DARK = 'dark',\n}\n","// constants\nimport { AuthActionTypes } from '@redux/auth/interfaces/constants.interfaces';\nimport { UserData, AuthActionType } from '@redux/auth/interfaces/actions.interfaces';\n\n// common success\nexport const authApiResponseSuccess = (actionType: string, data: UserData | {}): AuthActionType => ({\n    type: AuthActionTypes.API_RESPONSE_SUCCESS,\n    payload: { actionType, data },\n});\n// common error\nexport const authApiResponseError = (actionType: string, error: string): AuthActionType => ({\n    type: AuthActionTypes.API_RESPONSE_ERROR,\n    payload: { actionType, error },\n});\n\nexport const loginUser = (email: string, password: string): AuthActionType => ({\n    type: AuthActionTypes.LOGIN_USER,\n    payload: { email, password },\n});\n\nexport const logoutUser = (): AuthActionType => ({\n    type: AuthActionTypes.LOGOUT_USER,\n    payload: {},\n});\n\nexport const signupUser = (fullname: string, email: string, password: string): AuthActionType => ({\n    type: AuthActionTypes.SIGNUP_USER,\n    payload: { fullname, email, password },\n});\n\nexport const forgotPassword = (email: string): AuthActionType => ({\n    type: AuthActionTypes.FORGOT_PASSWORD,\n    payload: { email },\n});\n\nexport const resetAuth = (): AuthActionType => ({\n    type: AuthActionTypes.RESET,\n    payload: {},\n});\n","export enum AuthActionTypes {\n    API_RESPONSE_SUCCESS = '@@auth/API_RESPONSE_SUCCESS',\n    API_RESPONSE_ERROR = '@@auth/API_RESPONSE_ERROR',\n\n    LOGIN_USER = '@@auth/LOGIN_USER',\n    LOGOUT_USER = '@@auth/LOGOUT_USER',\n    SIGNUP_USER = '@@auth/SIGNUP_USER',\n    FORGOT_PASSWORD = '@@auth/FORGOT_PASSWORD',\n    FORGOT_PASSWORD_CHANGE = '@@auth/FORGOT_PASSWORD_CHANGE',\n\n    RESET = '@@auth/RESET',\n}\n","// constants\nimport { LayoutActionTypes } from '@redux/layout/interfaces/constants.interfaces';\n\nimport { LayoutActionType } from '@redux/layout/interfaces/actions.interfaces';\n\nexport const changeLayout = (layout: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeMenuPositions = (position: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_MENU_POSITIONS,\n    payload: position,\n});\n\nexport const changeSidebarTheme = (sidebarTheme: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_THEME,\n    payload: sidebarTheme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleSidebarUserInfo = (showSidebarUserInfo: boolean): LayoutActionType<boolean> => ({\n    type: LayoutActionTypes.TOGGLE_SIDEBAR_USER_INFO,\n    payload: showSidebarUserInfo,\n});\n\nexport const changeTopbarTheme = (topbarTheme: string): LayoutActionType<string> => ({\n    type: LayoutActionTypes.CHANGE_TOPBAR_THEME,\n    payload: topbarTheme,\n});\n\nexport const showRightSidebar = (): LayoutActionType<null> => ({\n    type: LayoutActionTypes.SHOW_RIGHT_SIDEBAR,\n});\n\nexport const hideRightSidebar = (): LayoutActionType<null> => ({\n    type: LayoutActionTypes.HIDE_RIGHT_SIDEBAR,\n});\n","const groupByFields = (array: Array<any>, f: any): Array<any> => {\n    /*\n    params description :\n        f : function which returnf the array of fields \n        e.g. :  (item) => {\n            return [itemField1, itemField2];\n        }\n        array : array of data to group e.g. : [{...}, {...}]       \n    */\n    var groups: { [key: string]: any[] } = {};\n    array.forEach((o) => {\n        var group = JSON.stringify(f(o));\n        groups[group] = groups[group] || [];\n        groups[group].push(o);\n    });\n\n    return Object.keys(groups).map((group) => {\n        return groups[group];\n    });\n};\n\n/**\n * split array into chunks\n * @param array - array to split\n * @param chunkSize - chunk size\n * @returns\n */\nconst splitArray = (array: Array<any>, chunkSize: number) => {\n    const chunks = Array(Math.ceil(array.length / chunkSize))\n        .fill(1)\n        .map((_, index) => index * chunkSize)\n        .map((begin) => array.slice(begin, begin + chunkSize));\n    return chunks;\n};\n\nexport { groupByFields, splitArray };\n","import {\n    LayoutTypes,\n    LayoutWidth,\n    MenuPositions,\n    SideBarTheme,\n    SideBarTypes,\n    TopbarTheme,\n} from '@constants/layout';\nexport enum LayoutActionTypes {\n    CHANGE_LAYOUT = '@@layout/CHANGE_LAYOUT',\n    CHANGE_LAYOUT_WIDTH = '@@layout/CHANGE_LAYOUT_WIDTH',\n    CHANGE_MENU_POSITIONS = '@@layout/CHANGE_MENU_POSITIONS',\n    CHANGE_SIDEBAR_THEME = '@@layout/CHANGE_SIDEBAR_THEME',\n    CHANGE_SIDEBAR_TYPE = '@@layout/CHANGE_SIDEBAR_TYPE',\n    TOGGLE_SIDEBAR_USER_INFO = '@@layout/TOGGLE_SIDEBAR_USER_INFO',\n    CHANGE_TOPBAR_THEME = '@@layout/CHANGE_TOPBAR_THEME',\n\n    SHOW_RIGHT_SIDEBAR = '@@layout/SHOW_RIGHT_SIDEBAR',\n    HIDE_RIGHT_SIDEBAR = '@@layout/HIDE_RIGHT_SIDEBAR',\n}\n\nexport interface LayoutStateTypes {\n    layoutType:\n    | LayoutTypes.LAYOUT_VERTICAL\n    | LayoutTypes.LAYOUT_TWO_COLUMN\n    | LayoutTypes.LAYOUT_DETACHED\n    | LayoutTypes.LAYOUT_HORIZONTAL;\n    layoutWidth: LayoutWidth.LAYOUT_WIDTH_FLUID | LayoutWidth.LAYOUT_WIDTH_BOXED;\n    menuPosition: MenuPositions.MENU_POSITION_FIXED | MenuPositions.MENU_POSITION_SCROLLABLE;\n    leftSideBarTheme: SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT | SideBarTheme.LEFT_SIDEBAR_THEME_DARK;\n    leftSideBarType:\n    | SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT\n    | SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED\n    | SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT;\n    showSidebarUserInfo: boolean;\n    topbarTheme: TopbarTheme.TOPBAR_THEME_LIGHT | TopbarTheme.TOPBAR_THEME_DARK;\n    isOpenRightSideBar: boolean;\n}"],"sourceRoot":""}